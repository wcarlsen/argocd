---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vaultwarden
  name: vaultwarden
  namespace: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
      annotations:
        chaos.alpha.kubernetes.io/enabled: "true"
    spec:
      containers:
      - image: vaultwarden/server:latest
        name: vaultwarden
        env:
        - name: SIGNUPS_ALLOWED
          value: "false"
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: data
          mountPath: "/data"
        - name: data-backup
          mountPath: "/data-backup"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: vaultwarden
      - name: data-backup
        persistentVolumeClaim:
          claimName: vaultwarden-backup

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        chaos.alpha.kubernetes.io/enabled: "true"
    spec:
      containers:
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 443
          name: websecure
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          name: nginx
        - name: certs
          mountPath: "/etc/nginx/ssl"
          readOnly: true
      volumes:
      - name: nginx
        configMap:
          name: nginx
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: certs
        secret:
          secretName: nginx-certs

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vaultwarden-backup
  name: vaultwarden-backup
  namespace: vaultwarden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden-backup
  template:
    metadata:
      labels:
        app: vaultwarden-backup
      # annotations:
      #   chaos.alpha.kubernetes.io/enabled: "true"
    spec:
      containers:
      - image: alpine:latest
        name: vaultwarden-backup
        volumeMounts:
        - name: data
          mountPath: "/data"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: vaultwarden
      - name: data
        persistentVolumeClaim:
          claimName: vaultwarden